// <auto-generated />
using System;
using EXE201_2RE_API.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EXE201_2RE_API.Migrations
{
    [DbContext(typeof(EXE201Context))]
    [Migration("20241102193157_addTableV4")]
    partial class addTableV4
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EXE201_2RE_API.Models.TblCart", b =>
                {
                    b.Property<Guid?>("cartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("dateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("paymentMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("totalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("userId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("cartId");

                    b.HasIndex("userId");

                    b.ToTable("tblCarts");
                });

            modelBuilder.Entity("EXE201_2RE_API.Models.TblCartDetail", b =>
                {
                    b.Property<Guid?>("cartDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("cartId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("productId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("cartDetailId");

                    b.HasIndex("cartId");

                    b.HasIndex("productId");

                    b.ToTable("tblCartDetails");
                });

            modelBuilder.Entity("EXE201_2RE_API.Models.TblCategory", b =>
                {
                    b.Property<Guid?>("categoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("categoryId");

                    b.ToTable("tblCategories");

                    b.HasData(
                        new
                        {
                            categoryId = new Guid("f8a8e1c5-4b3c-4e8f-b8ea-3f3f6e9c2f1a"),
                            name = "Áo Thun"
                        },
                        new
                        {
                            categoryId = new Guid("a7b8c9d8-3e2a-4b9b-b9f7-5e6a7c8e9f0b"),
                            name = "Quần Jeans"
                        },
                        new
                        {
                            categoryId = new Guid("c5e1f2b8-2f4c-4b3d-b7a8-4c5e6f7d8b9a"),
                            name = "Áo Khoác"
                        },
                        new
                        {
                            categoryId = new Guid("e2b3d5a6-3e4f-5a6b-c8d9-2f2b3e5a7b8c"),
                            name = "Váy"
                        },
                        new
                        {
                            categoryId = new Guid("9ad582ee-2371-4045-9549-013e7a3ea1cf"),
                            name = "Đồ Thể Thao"
                        },
                        new
                        {
                            categoryId = new Guid("3419aa1b-7454-4a17-9c8f-e3f1c497f7ab"),
                            name = "Khác"
                        });
                });

            modelBuilder.Entity("EXE201_2RE_API.Models.TblFavorite", b =>
                {
                    b.Property<Guid?>("favoriteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("productId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("userId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("favoriteId");

                    b.HasIndex("productId");

                    b.HasIndex("userId");

                    b.ToTable("tblFavorites");
                });

            modelBuilder.Entity("EXE201_2RE_API.Models.TblGenderCategory", b =>
                {
                    b.Property<Guid?>("genderCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("genderCategoryId");

                    b.ToTable("tblGenderCategories");

                    b.HasData(
                        new
                        {
                            genderCategoryId = new Guid("f47ac10b-58cc-4372-a567-0e02b2c3d479"),
                            name = "Nam"
                        },
                        new
                        {
                            genderCategoryId = new Guid("c9ebf5d5-d6b4-4c1d-bc12-fc4b8f1f4c61"),
                            name = "Nữ"
                        },
                        new
                        {
                            genderCategoryId = new Guid("6dd832ca-f7fe-4b77-9e4a-068ffd8db08e"),
                            name = "Tất cả"
                        });
                });

            modelBuilder.Entity("EXE201_2RE_API.Models.TblOrderHistory", b =>
                {
                    b.Property<Guid?>("orderHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("cartId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("changedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("orderHistoryId");

                    b.HasIndex("cartId");

                    b.ToTable("tblOrderHistories");
                });

            modelBuilder.Entity("EXE201_2RE_API.Models.TblProduct", b =>
                {
                    b.Property<Guid>("productId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("categoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("condition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("genderCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("sale")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("shopOwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("sizeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("productId");

                    b.HasIndex("categoryId");

                    b.HasIndex("genderCategoryId");

                    b.HasIndex("shopOwnerId");

                    b.HasIndex("sizeId");

                    b.ToTable("tblProducts");
                });

            modelBuilder.Entity("EXE201_2RE_API.Models.TblProductImage", b =>
                {
                    b.Property<Guid>("productImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("imageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("productId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("productImageId");

                    b.HasIndex("productId");

                    b.ToTable("tblProductImages");
                });

            modelBuilder.Entity("EXE201_2RE_API.Models.TblReview", b =>
                {
                    b.Property<Guid>("reviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TblProductproductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("rating")
                        .HasColumnType("int");

                    b.Property<Guid?>("shopId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("userId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("reviewId");

                    b.HasIndex("TblProductproductId");

                    b.HasIndex("shopId");

                    b.HasIndex("userId", "shopId")
                        .IsUnique()
                        .HasFilter("[userId] IS NOT NULL AND [shopId] IS NOT NULL");

                    b.ToTable("tblReviews");
                });

            modelBuilder.Entity("EXE201_2RE_API.Models.TblRole", b =>
                {
                    b.Property<Guid?>("roleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("roleId");

                    b.ToTable("tblRoles");

                    b.HasData(
                        new
                        {
                            roleId = new Guid("f47ac10b-58cc-4372-a567-0e02b2c3d479"),
                            name = "User"
                        },
                        new
                        {
                            roleId = new Guid("c9ebf5d5-d6b4-4c1d-bc12-fc4b8f1f4c61"),
                            name = "Admin"
                        });
                });

            modelBuilder.Entity("EXE201_2RE_API.Models.TblSize", b =>
                {
                    b.Property<Guid?>("sizeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("sizeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("sizeId");

                    b.ToTable("tblSizes");

                    b.HasData(
                        new
                        {
                            sizeId = new Guid("d4f1c0e1-2d41-4f0e-bc9f-4b85b6c5f4a2"),
                            sizeName = "S"
                        },
                        new
                        {
                            sizeId = new Guid("e5a1b4d6-5c4c-4f0e-bc9f-4b85b6c5f4a3"),
                            sizeName = "M"
                        },
                        new
                        {
                            sizeId = new Guid("f6b2e8a7-7d5f-4f0e-bc9f-4b85b6c5f4a4"),
                            sizeName = "L"
                        },
                        new
                        {
                            sizeId = new Guid("a7c3f9b8-8e6f-4f0e-bc9f-4b85b6c5f4a5"),
                            sizeName = "XL"
                        },
                        new
                        {
                            sizeId = new Guid("b1bc2089-742e-4cd2-b66e-21f7babf62df"),
                            sizeName = "FREE"
                        });
                });

            modelBuilder.Entity("EXE201_2RE_API.Models.TblTransaction", b =>
                {
                    b.Property<Guid?>("transactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("month")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("totalMoney")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("userId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("year")
                        .HasColumnType("int");

                    b.HasKey("transactionId");

                    b.HasIndex("userId");

                    b.ToTable("tblTransactions");
                });

            modelBuilder.Entity("EXE201_2RE_API.Models.TblUser", b =>
                {
                    b.Property<Guid?>("userId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("isShopOwner")
                        .HasColumnType("bit");

                    b.Property<string>("passWord")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("roleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("shopAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("shopBank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("shopBankId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("shopDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("shopLogo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("shopName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("userName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("userId");

                    b.HasIndex("roleId");

                    b.ToTable("tblUsers");
                });

            modelBuilder.Entity("EXE201_2RE_API.Models.TblCart", b =>
                {
                    b.HasOne("EXE201_2RE_API.Models.TblUser", "user")
                        .WithMany("tblCarts")
                        .HasForeignKey("userId");

                    b.Navigation("user");
                });

            modelBuilder.Entity("EXE201_2RE_API.Models.TblCartDetail", b =>
                {
                    b.HasOne("EXE201_2RE_API.Models.TblCart", "cart")
                        .WithMany("tblCartDetails")
                        .HasForeignKey("cartId");

                    b.HasOne("EXE201_2RE_API.Models.TblProduct", "product")
                        .WithMany("tblCartDetails")
                        .HasForeignKey("productId");

                    b.Navigation("cart");

                    b.Navigation("product");
                });

            modelBuilder.Entity("EXE201_2RE_API.Models.TblFavorite", b =>
                {
                    b.HasOne("EXE201_2RE_API.Models.TblProduct", "product")
                        .WithMany("tblFavorites")
                        .HasForeignKey("productId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EXE201_2RE_API.Models.TblUser", "user")
                        .WithMany("tblFavorites")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("product");

                    b.Navigation("user");
                });

            modelBuilder.Entity("EXE201_2RE_API.Models.TblOrderHistory", b =>
                {
                    b.HasOne("EXE201_2RE_API.Models.TblCart", "cart")
                        .WithMany("tblOrderHistories")
                        .HasForeignKey("cartId");

                    b.Navigation("cart");
                });

            modelBuilder.Entity("EXE201_2RE_API.Models.TblProduct", b =>
                {
                    b.HasOne("EXE201_2RE_API.Models.TblCategory", "category")
                        .WithMany("tblProducts")
                        .HasForeignKey("categoryId");

                    b.HasOne("EXE201_2RE_API.Models.TblGenderCategory", "genderCategory")
                        .WithMany("tblProducts")
                        .HasForeignKey("genderCategoryId");

                    b.HasOne("EXE201_2RE_API.Models.TblUser", "shopOwner")
                        .WithMany("tblProducts")
                        .HasForeignKey("shopOwnerId");

                    b.HasOne("EXE201_2RE_API.Models.TblSize", "size")
                        .WithMany("tblProducts")
                        .HasForeignKey("sizeId");

                    b.Navigation("category");

                    b.Navigation("genderCategory");

                    b.Navigation("shopOwner");

                    b.Navigation("size");
                });

            modelBuilder.Entity("EXE201_2RE_API.Models.TblProductImage", b =>
                {
                    b.HasOne("EXE201_2RE_API.Models.TblProduct", "product")
                        .WithMany("tblProductImages")
                        .HasForeignKey("productId");

                    b.Navigation("product");
                });

            modelBuilder.Entity("EXE201_2RE_API.Models.TblReview", b =>
                {
                    b.HasOne("EXE201_2RE_API.Models.TblProduct", null)
                        .WithMany("tblReviews")
                        .HasForeignKey("TblProductproductId");

                    b.HasOne("EXE201_2RE_API.Models.TblUser", "shop")
                        .WithMany("reviewsReceivedAsShop")
                        .HasForeignKey("shopId");

                    b.HasOne("EXE201_2RE_API.Models.TblUser", "user")
                        .WithMany("reviewsWritten")
                        .HasForeignKey("userId");

                    b.Navigation("shop");

                    b.Navigation("user");
                });

            modelBuilder.Entity("EXE201_2RE_API.Models.TblTransaction", b =>
                {
                    b.HasOne("EXE201_2RE_API.Models.TblUser", "user")
                        .WithMany()
                        .HasForeignKey("userId");

                    b.Navigation("user");
                });

            modelBuilder.Entity("EXE201_2RE_API.Models.TblUser", b =>
                {
                    b.HasOne("EXE201_2RE_API.Models.TblRole", "role")
                        .WithMany("tblUsers")
                        .HasForeignKey("roleId");

                    b.Navigation("role");
                });

            modelBuilder.Entity("EXE201_2RE_API.Models.TblCart", b =>
                {
                    b.Navigation("tblCartDetails");

                    b.Navigation("tblOrderHistories");
                });

            modelBuilder.Entity("EXE201_2RE_API.Models.TblCategory", b =>
                {
                    b.Navigation("tblProducts");
                });

            modelBuilder.Entity("EXE201_2RE_API.Models.TblGenderCategory", b =>
                {
                    b.Navigation("tblProducts");
                });

            modelBuilder.Entity("EXE201_2RE_API.Models.TblProduct", b =>
                {
                    b.Navigation("tblCartDetails");

                    b.Navigation("tblFavorites");

                    b.Navigation("tblProductImages");

                    b.Navigation("tblReviews");
                });

            modelBuilder.Entity("EXE201_2RE_API.Models.TblRole", b =>
                {
                    b.Navigation("tblUsers");
                });

            modelBuilder.Entity("EXE201_2RE_API.Models.TblSize", b =>
                {
                    b.Navigation("tblProducts");
                });

            modelBuilder.Entity("EXE201_2RE_API.Models.TblUser", b =>
                {
                    b.Navigation("reviewsReceivedAsShop");

                    b.Navigation("reviewsWritten");

                    b.Navigation("tblCarts");

                    b.Navigation("tblFavorites");

                    b.Navigation("tblProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
